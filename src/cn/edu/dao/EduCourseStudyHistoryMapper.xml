<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.dao.EduCourseStudyHistoryMapper">
  <resultMap id="BaseResultMap" type="cn.edu.pojo.EduCourseStudyHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="courseId" jdbcType="INTEGER" property="courseid" />
    <result column="kpointId" jdbcType="INTEGER" property="kpointid" />
    <result column="playerCount" jdbcType="INTEGER" property="playercount" />
    <result column="courseName" jdbcType="VARCHAR" property="coursename" />
    <result column="kpointName" jdbcType="VARCHAR" property="kpointname" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.pojo.EduCourseStudyHistory">
    <result column="databack" jdbcType="LONGVARCHAR" property="databack" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, courseId, kpointId, playerCount, courseName, kpointName, updateTime
  </sql>
  <sql id="Blob_Column_List">
    databack
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.pojo.EduCourseStudyHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from educoursestudyhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.pojo.EduCourseStudyHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from educoursestudyhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from educoursestudyhistory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from educoursestudyhistory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.pojo.EduCourseStudyHistoryExample">
    delete from educoursestudyhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.pojo.EduCourseStudyHistory">
    insert into educoursestudyhistory (id, userId, courseId, 
      kpointId, playerCount, courseName, 
      kpointName, updateTime, databack
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, 
      #{kpointid,jdbcType=INTEGER}, #{playercount,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, 
      #{kpointname,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, #{databack,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.pojo.EduCourseStudyHistory">
    insert into educoursestudyhistory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="kpointid != null">
        kpointId,
      </if>
      <if test="playercount != null">
        playerCount,
      </if>
      <if test="coursename != null">
        courseName,
      </if>
      <if test="kpointname != null">
        kpointName,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="databack != null">
        databack,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="kpointid != null">
        #{kpointid,jdbcType=INTEGER},
      </if>
      <if test="playercount != null">
        #{playercount,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="kpointname != null">
        #{kpointname,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="databack != null">
        #{databack,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.pojo.EduCourseStudyHistoryExample" resultType="java.lang.Long">
    select count(*) from educoursestudyhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update educoursestudyhistory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.kpointid != null">
        kpointId = #{record.kpointid,jdbcType=INTEGER},
      </if>
      <if test="record.playercount != null">
        playerCount = #{record.playercount,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null">
        courseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.kpointname != null">
        kpointName = #{record.kpointname,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.databack != null">
        databack = #{record.databack,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update educoursestudyhistory
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      kpointId = #{record.kpointid,jdbcType=INTEGER},
      playerCount = #{record.playercount,jdbcType=INTEGER},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      kpointName = #{record.kpointname,jdbcType=VARCHAR},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      databack = #{record.databack,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update educoursestudyhistory
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      kpointId = #{record.kpointid,jdbcType=INTEGER},
      playerCount = #{record.playercount,jdbcType=INTEGER},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      kpointName = #{record.kpointname,jdbcType=VARCHAR},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.pojo.EduCourseStudyHistory">
    update educoursestudyhistory
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseId = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="kpointid != null">
        kpointId = #{kpointid,jdbcType=INTEGER},
      </if>
      <if test="playercount != null">
        playerCount = #{playercount,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        courseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="kpointname != null">
        kpointName = #{kpointname,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="databack != null">
        databack = #{databack,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.pojo.EduCourseStudyHistory">
    update educoursestudyhistory
    set userId = #{userid,jdbcType=INTEGER},
      courseId = #{courseid,jdbcType=INTEGER},
      kpointId = #{kpointid,jdbcType=INTEGER},
      playerCount = #{playercount,jdbcType=INTEGER},
      courseName = #{coursename,jdbcType=VARCHAR},
      kpointName = #{kpointname,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      databack = #{databack,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.pojo.EduCourseStudyHistory">
    update educoursestudyhistory
    set userId = #{userid,jdbcType=INTEGER},
      courseId = #{courseid,jdbcType=INTEGER},
      kpointId = #{kpointid,jdbcType=INTEGER},
      playerCount = #{playercount,jdbcType=INTEGER},
      courseName = #{coursename,jdbcType=VARCHAR},
      kpointName = #{kpointname,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>