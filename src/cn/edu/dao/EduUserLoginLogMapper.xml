<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.dao.EduUserLoginLogMapper">
  <resultMap id="BaseResultMap" type="cn.edu.pojo.EduUserLoginLog">
    <id column="logId" jdbcType="INTEGER" property="logid" />
    <result column="loginTime" jdbcType="TIMESTAMP" property="logintime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="osName" jdbcType="VARCHAR" property="osname" />
    <result column="userAgent" jdbcType="VARCHAR" property="useragent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    logId, loginTime, ip, userId, osName, userAgent
  </sql>
  <select id="selectByExample" parameterType="cn.edu.pojo.EduUserLoginLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eduuserloginlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eduuserloginlog
    where logId = #{logid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eduuserloginlog
    where logId = #{logid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.pojo.EduUserLoginLogExample">
    delete from eduuserloginlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.pojo.EduUserLoginLog">
    insert into eduuserloginlog (logId, loginTime, ip, 
      userId, osName, userAgent
      )
    values (#{logid,jdbcType=INTEGER}, #{logintime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{osname,jdbcType=VARCHAR}, #{useragent,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.pojo.EduUserLoginLog">
    insert into eduuserloginlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logid != null">
        logId,
      </if>
      <if test="logintime != null">
        loginTime,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="osname != null">
        osName,
      </if>
      <if test="useragent != null">
        userAgent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logid != null">
        #{logid,jdbcType=INTEGER},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="osname != null">
        #{osname,jdbcType=VARCHAR},
      </if>
      <if test="useragent != null">
        #{useragent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.pojo.EduUserLoginLogExample" resultType="java.lang.Long">
    select count(*) from eduuserloginlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eduuserloginlog
    <set>
      <if test="record.logid != null">
        logId = #{record.logid,jdbcType=INTEGER},
      </if>
      <if test="record.logintime != null">
        loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.osname != null">
        osName = #{record.osname,jdbcType=VARCHAR},
      </if>
      <if test="record.useragent != null">
        userAgent = #{record.useragent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eduuserloginlog
    set logId = #{record.logid,jdbcType=INTEGER},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      osName = #{record.osname,jdbcType=VARCHAR},
      userAgent = #{record.useragent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.pojo.EduUserLoginLog">
    update eduuserloginlog
    <set>
      <if test="logintime != null">
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="osname != null">
        osName = #{osname,jdbcType=VARCHAR},
      </if>
      <if test="useragent != null">
        userAgent = #{useragent,jdbcType=VARCHAR},
      </if>
    </set>
    where logId = #{logid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.pojo.EduUserLoginLog">
    update eduuserloginlog
    set loginTime = #{logintime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      osName = #{osname,jdbcType=VARCHAR},
      userAgent = #{useragent,jdbcType=VARCHAR}
    where logId = #{logid,jdbcType=INTEGER}
  </update>
</mapper>