<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.dao.EduMsgReceiveMapper">
  <resultMap id="BaseResultMap" type="cn.edu.pojo.EduMsgReceive">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="cusId" jdbcType="INTEGER" property="cusid" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="receivingCusid" jdbcType="INTEGER" property="receivingcusid" />
    <result column="groupId" jdbcType="INTEGER" property="groupid" />
    <result column="showName" jdbcType="VARCHAR" property="showname" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.pojo.EduMsgReceive">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, addTime, cusId, updateTime, type, status, receivingCusid, groupId, showName
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.pojo.EduMsgReceiveExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edumsgreceive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.pojo.EduMsgReceiveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edumsgreceive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edumsgreceive
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edumsgreceive
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.pojo.EduMsgReceiveExample">
    delete from edumsgreceive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.pojo.EduMsgReceive">
    insert into edumsgreceive (id, addTime, cusId, 
      updateTime, type, status, 
      receivingCusid, groupId, showName, 
      content)
    values (#{id,jdbcType=INTEGER}, #{addtime,jdbcType=TIMESTAMP}, #{cusid,jdbcType=INTEGER}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{receivingcusid,jdbcType=INTEGER}, #{groupid,jdbcType=INTEGER}, #{showname,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.pojo.EduMsgReceive">
    insert into edumsgreceive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="addtime != null">
        addTime,
      </if>
      <if test="cusid != null">
        cusId,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="receivingcusid != null">
        receivingCusid,
      </if>
      <if test="groupid != null">
        groupId,
      </if>
      <if test="showname != null">
        showName,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cusid != null">
        #{cusid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="receivingcusid != null">
        #{receivingcusid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="showname != null">
        #{showname,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.pojo.EduMsgReceiveExample" resultType="java.lang.Long">
    select count(*) from edumsgreceive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update edumsgreceive
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.addtime != null">
        addTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cusid != null">
        cusId = #{record.cusid,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.receivingcusid != null">
        receivingCusid = #{record.receivingcusid,jdbcType=INTEGER},
      </if>
      <if test="record.groupid != null">
        groupId = #{record.groupid,jdbcType=INTEGER},
      </if>
      <if test="record.showname != null">
        showName = #{record.showname,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update edumsgreceive
    set id = #{record.id,jdbcType=INTEGER},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      cusId = #{record.cusid,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      receivingCusid = #{record.receivingcusid,jdbcType=INTEGER},
      groupId = #{record.groupid,jdbcType=INTEGER},
      showName = #{record.showname,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update edumsgreceive
    set id = #{record.id,jdbcType=INTEGER},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      cusId = #{record.cusid,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      receivingCusid = #{record.receivingcusid,jdbcType=INTEGER},
      groupId = #{record.groupid,jdbcType=INTEGER},
      showName = #{record.showname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.pojo.EduMsgReceive">
    update edumsgreceive
    <set>
      <if test="addtime != null">
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cusid != null">
        cusId = #{cusid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="receivingcusid != null">
        receivingCusid = #{receivingcusid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null">
        groupId = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="showname != null">
        showName = #{showname,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.pojo.EduMsgReceive">
    update edumsgreceive
    set addTime = #{addtime,jdbcType=TIMESTAMP},
      cusId = #{cusid,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      receivingCusid = #{receivingcusid,jdbcType=INTEGER},
      groupId = #{groupid,jdbcType=INTEGER},
      showName = #{showname,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.pojo.EduMsgReceive">
    update edumsgreceive
    set addTime = #{addtime,jdbcType=TIMESTAMP},
      cusId = #{cusid,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      receivingCusid = #{receivingcusid,jdbcType=INTEGER},
      groupId = #{groupid,jdbcType=INTEGER},
      showName = #{showname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>