<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.dao.EduCommentMapper">
  <resultMap id="BaseResultMap" type="cn.edu.pojo.EduComment">
    <id column="commentId" jdbcType="INTEGER" property="commentid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="pCommentId" jdbcType="INTEGER" property="pcommentid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="otherId" jdbcType="INTEGER" property="otherid" />
    <result column="praiseCount" jdbcType="INTEGER" property="praisecount" />
    <result column="repleyCount" jdbcType="INTEGER" property="repleycount" />
    <result column="courseId" jdbcType="INTEGER" property="courseid" />
    <result column="articleId" jdbcType="INTEGER" property="articleid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    commentId, userId, pCommentId, content, addTime, otherId, praiseCount, repleyCount, 
    courseId, articleId
  </sql>
  <select id="selectByExample" parameterType="cn.edu.pojo.EduCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from educomment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from educomment
    where commentId = #{commentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from educomment
    where commentId = #{commentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.pojo.EduCommentExample">
    delete from educomment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.pojo.EduComment">
    insert into educomment (commentId, userId, pCommentId, 
      content, addTime, otherId, 
      praiseCount, repleyCount, courseId, 
      articleId)
    values (#{commentid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{pcommentid,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, #{otherid,jdbcType=INTEGER}, 
      #{praisecount,jdbcType=INTEGER}, #{repleycount,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, 
      #{articleid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.pojo.EduComment">
    insert into educomment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentid != null">
        commentId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="pcommentid != null">
        pCommentId,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="addtime != null">
        addTime,
      </if>
      <if test="otherid != null">
        otherId,
      </if>
      <if test="praisecount != null">
        praiseCount,
      </if>
      <if test="repleycount != null">
        repleyCount,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="articleid != null">
        articleId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentid != null">
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="pcommentid != null">
        #{pcommentid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="otherid != null">
        #{otherid,jdbcType=INTEGER},
      </if>
      <if test="praisecount != null">
        #{praisecount,jdbcType=INTEGER},
      </if>
      <if test="repleycount != null">
        #{repleycount,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="articleid != null">
        #{articleid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.pojo.EduCommentExample" resultType="java.lang.Long">
    select count(*) from educomment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update educomment
    <set>
      <if test="record.commentid != null">
        commentId = #{record.commentid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.pcommentid != null">
        pCommentId = #{record.pcommentid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null">
        addTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.otherid != null">
        otherId = #{record.otherid,jdbcType=INTEGER},
      </if>
      <if test="record.praisecount != null">
        praiseCount = #{record.praisecount,jdbcType=INTEGER},
      </if>
      <if test="record.repleycount != null">
        repleyCount = #{record.repleycount,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.articleid != null">
        articleId = #{record.articleid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update educomment
    set commentId = #{record.commentid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      pCommentId = #{record.pcommentid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      otherId = #{record.otherid,jdbcType=INTEGER},
      praiseCount = #{record.praisecount,jdbcType=INTEGER},
      repleyCount = #{record.repleycount,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      articleId = #{record.articleid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.pojo.EduComment">
    update educomment
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="pcommentid != null">
        pCommentId = #{pcommentid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="otherid != null">
        otherId = #{otherid,jdbcType=INTEGER},
      </if>
      <if test="praisecount != null">
        praiseCount = #{praisecount,jdbcType=INTEGER},
      </if>
      <if test="repleycount != null">
        repleyCount = #{repleycount,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseId = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="articleid != null">
        articleId = #{articleid,jdbcType=INTEGER},
      </if>
    </set>
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.pojo.EduComment">
    update educomment
    set userId = #{userid,jdbcType=INTEGER},
      pCommentId = #{pcommentid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      addTime = #{addtime,jdbcType=TIMESTAMP},
      otherId = #{otherid,jdbcType=INTEGER},
      praiseCount = #{praisecount,jdbcType=INTEGER},
      repleyCount = #{repleycount,jdbcType=INTEGER},
      courseId = #{courseid,jdbcType=INTEGER},
      articleId = #{articleid,jdbcType=INTEGER}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
</mapper>